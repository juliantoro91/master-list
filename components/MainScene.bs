' By juliantoro91.  More info: https://github.com/juliantoro91

sub init()
    m.top.id = "MainScene"
    m.top.backgroundColor = "0x000000"

    initScreen()

    addListToScreen(getInitialListConfig())
end sub

sub initScreen()
    m.container = m.top.findNode("container")

    m.top.appendChild(m.container)
    m.container.visible = true
    m.container.setFocus(true)
end sub

sub addListToScreen(settings as object)
    m.container.removeChildren(m.container.getChildren(-1, 0))
    m.list = m.container.createChild("MasterList")

    m.list.settings = settings
    m.list.content = generateContent(10)

    m.list.setFocus(true)

    centerList(m.list)
end sub

function getInitialListConfig() as object
    settings = {
        itemComponentName : "SimpleListItem"
        wrap : true
        duration : 0.3
        showTargetRects : true
        usePlainStyle : true
        numRects : 8
        minFocused : 2
        maxFocused : 5
        cardWidth : 120
        cardHeight : 240
        cardSpacing : 40
        verticalList : false
    }

    return settings
end function

function generateContent(qty as integer) as object
    content = CreateObject("roSGNode", "ContentNode")

    for i=1 to qty
        itemContent = CreateObject("roSGNode", "ContentNode")
        itemContent.title = Str(i)

        content.appendChild(itemContent)
    end for

    return content
end function

sub centerList(list as object)
    dimensions = list@.get("dimensions")

    x = m.container.width - dimensions.width
    y = m.container.height - dimensions.height

    list.translation = [x/2, y/2]
end sub

sub onKeyEvent(key as string, press as boolean) as boolean
    if not press then return false

    result = false

    if key = "options"
        launchConfigBanner()
        result = true
    else if key = "back"
        if m.configBanner <> invalid
            addListToScreen(m.configBanner.settings)
            m.top.removeChild(m.configBanner)
            m.list.setFocus(true)
            m.configBanner = invalid
            result = true
        end if
    else if key = "play"
        printABitmap()
    end if

    return result
end sub

sub launchConfigBanner()
    m.configBanner = m.top.createChild("ConfigBanner")
    m.configBanner.settings = m.list@.get("settings")

    m.configBanner.setFocus(true)
end sub

' RoBITMAP Experiments
sub printABitmap()
    params = {
        width : 501
        height : 501
        color : "FFFF00"
    }

    draw = CreateObject("roBitmap", {width: params.width, height: params.height, AlphaEnable: true})

    color = {
        full : colorHexToInt(params.color, 255)
        trans : colorHexToInt(params.color, 0)
    }

    centerx = Int(params.width/2) + 1
    centery = Int(params.height/2) + 1
    radio = Int(params.height/2)

    for x = 0 to params.width - 1
        for y = 0 to params.height - 1
            tempColor = color.trans
            if (x - centerx)^2 + (y - centery)^2 < radio^2
                tempColor = color.full
            end if
            draw.drawPoint(x, y, 1, tempColor)
        end for
    end for

    tempPNG = draw.getPng(0, 0, draw.getWidth(), draw.getHeight())
    tempPNG.writeFile("tmp:/temp.png")

    poster = CreateObject("roSGNode", "Poster")
    poster.width = draw.getWidth()
    poster.height = draw.getHeight()
    poster.uri = "tmp:/temp.png"
    poster.translation = [100, 100]

    m.top.appendChild(poster)
end sub

function colorHexToInt(colorHex as object, alpha as integer)
    color = CreateObject("roByteArray")
    color.fromHexString(colorHex)

    return (color[0] * 256^3) + (color[1] * 256^2) + (color[2] * 256) + alpha
end function
